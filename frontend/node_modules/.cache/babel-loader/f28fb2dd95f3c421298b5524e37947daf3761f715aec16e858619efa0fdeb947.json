{"ast":null,"code":"var _jsxFileName = \"/Users/chilaka/Documents/Projects/data_visualisation/frontend/src/components/BarChart.jsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst BarChart = ({\n  data,\n  onBarClick\n}) => {\n  const chartData = {\n    labels: data.map(item => item.Day),\n    datasets: [{\n      label: 'Feature A',\n      data: data.map(item => parseInt(item.A)),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)'\n    }]\n  };\n  const options = {\n    onClick: (event, elements) => {\n      if (elements.length > 0) {\n        const index = elements[0].index; // Get the index of the clicked bar\n        const selectedCategory = data[index];\n        onBarClick(selectedCategory); // Pass the clicked category to the parent component\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","BarChart","data","onBarClick","chartData","labels","map","item","Day","datasets","label","parseInt","A","backgroundColor","options","onClick","event","elements","length","index","selectedCategory","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chilaka/Documents/Projects/data_visualisation/frontend/src/components/BarChart.jsx"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\n// Register components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst BarChart = ({ data, onBarClick }) => {\n  const chartData = {\n    labels: data.map((item) => item.Day),\n    datasets: [\n      {\n        label: 'Feature A',\n        data: data.map((item) => parseInt(item.A)),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      },\n    ],\n  };\n\n  const options = {\n    onClick: (event, elements) => {\n      if (elements.length > 0) {\n        const index = elements[0].index; // Get the index of the clicked bar\n        const selectedCategory = data[index];\n        onBarClick(selectedCategory); // Pass the clicked category to the parent component\n      }\n    },\n  };\n\n  return <Bar data={chartData} options={options} />;\n};\n\nexport default BarChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EACzC,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEH,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC;IACpCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBR,IAAI,EAAEA,IAAI,CAACI,GAAG,CAAEC,IAAI,IAAKI,QAAQ,CAACJ,IAAI,CAACK,CAAC,CAAC,CAAC;MAC1CC,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,OAAO,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MAC5B,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QACvB,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC;QACjC,MAAMC,gBAAgB,GAAGlB,IAAI,CAACiB,KAAK,CAAC;QACpChB,UAAU,CAACiB,gBAAgB,CAAC,CAAC,CAAC;MAChC;IACF;EACF,CAAC;EAED,oBAAOrB,OAAA,CAACV,GAAG;IAACa,IAAI,EAAEE,SAAU;IAACU,OAAO,EAAEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD,CAAC;AAACC,EAAA,GAvBIxB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}